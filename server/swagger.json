{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Partner Management (TPS UI)",
    "description": "Trading Partner Service is the Single source of truth for Partners (Suppliers, Sellers, ThirdParty Auditors, Clubcard Suppliers etc."
  },
  "basePath": "/tradingpartner/api",
  "tags": [
    {
      "name": "Partners",
      "description": "API for Partners"
    },
    {
      "name": "Profile",
      "description": "API to get user profile information"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/supplier": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "description": "Authorization Header for Bearer Token",
          "required": false,
          "type": "string"
        },
        {
          "name": "TraceId",
          "in": "header",
          "description": "Trace Id for the request",
          "required": false,
          "type": "string"
        },
        {
          "name": "params",
          "in": "query",
          "required": false,
          "description": "Request params of Partner that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Partners"
        ],
        "summary": "Get partner with given params",
        "responses": {
          "200": {
            "description": "Partners found",
            "schema": {
              "$ref": "#/definitions/Partners"
            }
          }
        }
      }
    },
    "/contacts":{
      
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "description": "Authorization Header for Bearer Token",
          "required": false,
          "type": "string"
        },
        {
          "name": "PageNumber",
          "in": "header",
          "description": "Pagenumber for the request",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get Partner Contacts",
        "responses": {
          "200": {
            "description": "Partner Contacts",
            "schema": {
              "$ref": "#/definitions/Contacts"
            }
          }
        }
      }
    
  },
  "/contact":{
    "parameters": [
      {
        "name": "Authorization",
        "in": "header",
        "description": "Authorization Header for Bearer Token",
        "required": false,
        "type": "string"
      },
      {
        "name": "query",
        "in": "body",
        "required": false,
        "description": "Body for creating supplier",
        "type": "object"
      }
    ],
    "post": {
      "tags": [
        "Metadata"
      ],
      "summary": "Create a new Partner contact",
      "responses": {
        "200": {
          "description": "Successfully created Partner Contact",
          "schema": {
            "$ref": "#/definitions/Contact"
          }
        }
      }
    }
  },
  "/address":{
    "parameters": [
      {
        "name": "body",
        "in": "body",
        "required": false,
        "description": "Body for creating supplier",
        "type": "object"
      },
      {
        "name": "data",
        "in": "body",
        "required": false,
        "description": "Additional data to be passed for creating supplier",
        "type": "object"
      },
      {
        "name": "isPatchOperation",
        "in": "body",
        "required": false,
        "description": "Patch operation flag",
        "type": "boolean"
      }
    ],
    "post": {
      "tags": [
        "Metadata"
      ],
      "summary": "Create a new partner address",
      "responses": {
        "200": {
          "description": "Successfully created address",
          "schema": {
            "$ref": "#/definitions/Address"
          }
        }
      }
    }
  },
    "/header": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "description": "Authorization Header for Bearer Token",
          "required": false,
          "type": "string"
        },
        {
          "name": "TraceId",
          "in": "header",
          "description": "Trace Id for the request",
          "required": false,
          "type": "string"
        },
        {
          "name": "query",
          "in": "body",
          "required": false,
          "description": "Body for creating supplier",
          "type": "object"
        }
      ],
      "post": {
        "tags": [
          "Partners"
        ],
        "summary": "Create a new Partner Header",
        "responses": {
          "200": {
            "description": "Successfully created Partner Header",
            "schema": {
              "$ref": "#/definitions/Partners"
            }
          }
        }
      }
    },
    "/supplier-header": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "description": "Authorization Header for Bearer Token",
          "required": false,
          "type": "string"
        },
        {
          "name": "TraceId",
          "in": "header",
          "description": "Trace Id for the request",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get Partner Header metadata",
        "responses": {
          "200": {
            "description": "Partner Header is found",
            "schema": {
              "$ref": "#/definitions/Metadata"
            }
          }
        }
      }
    },
    "/supplier-site": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "description": "Authorization Header for Bearer Token",
          "required": false,
          "type": "string"
        },
        {
          "name": "TraceId",
          "in": "header",
          "description": "Trace Id for the request",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get Partner Site metadata",
        "responses": {
          "200": {
            "description": "Partner Site metadata found",
            "schema": {
              "$ref": "#/definitions/Metadata"
            }
          }
        }
      }
    },
    "/supplier-payments": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "description": "Authorization Header for Bearer Token",
          "required": false,
          "type": "string"
        },
        {
          "name": "TraceId",
          "in": "header",
          "description": "Trace Id for the request",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get Partner Payment metadata",
        "responses": {
          "200": {
            "description": "Partner payment metadata found",
            "schema": {
              "$ref": "#/definitions/Metadata"
            }
          }
        }
      }
    },
    "/profile": {
      "parameters": [
        {
          "name": "Authorization",
          "in": "header",
          "description": "Authorization Header for Bearer Token",
          "required": false,
          "type": "string"
        },
        {
          "name": "TraceId",
          "in": "header",
          "description": "Trace Id for the request",
          "required": false,
          "type": "string"
        },
        {
          "name": "uuid",
          "in": "path",
          "required": true,
          "description": "UUID of user to get his name",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Get user first and last name",
        "responses": {
          "200": {
            "description": "User name is found",
            "schema": {
              "$ref": "#/definitions/Partner"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/uam": {
      "parameters": [
        {
          "name": "Authorization",
          "required": true,
          "in": "header",
          "type": "string",
          "description": "The access token of the current user of the current instance with Bearer added"
        }
      ],
      "get": {
        "tags": [
          "UAM"
        ],
        "summary": "Get the policies for the current user from UAM",
        "responses": {
          "200": {
            "description": "Policies found for the current user"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/company-address": {
      "parameters": [
        {
          "name": "companyHouseNumber",
          "in": "query",
          "required": true,
          "description": "Company house number to be used for searching company address",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Address"
        ],
        "summary": "Get company address with given params",
        "responses": {
          "200": {
            "description": "Company address found",
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Metadata": {
      "required": [],
      "properties": {}
    },
    "Contacts": {
      "required": [],
      "properties": {}
    },
    "Contact": {
      "required": [],
      "properties": {}
    },
    "Partners": {
      "required": [],
      "properties": {}
    },
    "Header": {
      "required": [],
      "properties": {}
    },
    "Site": {
      "required": [],
      "properties": {}
    },
    "Payment": {
      "required": [],
      "properties": {}
    },
    "Address": {
      "required": [],
      "properties": {}
    },
    "ApiDocs": {}
  }
}
