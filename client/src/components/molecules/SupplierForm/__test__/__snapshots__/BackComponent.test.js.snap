// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`back component test cases render the component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BackComponent />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <ForwardRef
        buttonVariant="secondary"
        emphasized={true}
        icon={
          Object {
            "graphic": "backwardLink",
            "position": Object {
              "global": "left",
            },
            "size": "sm",
          }
        }
      >
        Back to supplier overview
      </ForwardRef>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "buttonVariant": "secondary",
        "children": "Back to supplier overview",
        "emphasized": true,
        "icon": Object {
          "graphic": "backwardLink",
          "position": Object {
            "global": "left",
          },
          "size": "sm",
        },
        "onClick": undefined,
      },
      "ref": null,
      "rendered": "Back to supplier overview",
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "componentName": "IconButtonLinkWithText",
        "displayName": "WithProps(IconButtonLinkWithText)",
        "render": [Function],
      },
    },
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bwzfXH",
        "isStatic": true,
        "rules": Array [
          "
    padding: 17px 0px
    width: 100%;
    border-top: 1px solid #ccc;
    border-bottom: 1px solid #ccc;
    margin-top: 24px;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bwzfXH",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <ForwardRef
          buttonVariant="secondary"
          emphasized={true}
          icon={
            Object {
              "graphic": "backwardLink",
              "position": Object {
                "global": "left",
              },
              "size": "sm",
            }
          }
        >
          Back to supplier overview
        </ForwardRef>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "buttonVariant": "secondary",
          "children": "Back to supplier overview",
          "emphasized": true,
          "icon": Object {
            "graphic": "backwardLink",
            "position": Object {
              "global": "left",
            },
            "size": "sm",
          },
          "onClick": undefined,
        },
        "ref": null,
        "rendered": "Back to supplier overview",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "componentName": "IconButtonLinkWithText",
          "displayName": "WithProps(IconButtonLinkWithText)",
          "render": [Function],
        },
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bwzfXH",
          "isStatic": true,
          "rules": Array [
            "
    padding: 17px 0px
    width: 100%;
    border-top: 1px solid #ccc;
    border-bottom: 1px solid #ccc;
    margin-top: 24px;
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bwzfXH",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
